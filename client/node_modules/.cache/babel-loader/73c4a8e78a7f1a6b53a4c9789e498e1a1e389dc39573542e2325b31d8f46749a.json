{"ast":null,"code":"import _regeneratorRuntime from \"/home/user/School/CSC330/ThinkLink/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/user/School/CSC330/ThinkLink/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n/*\nimport savebuttoncontainer from '. ./components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\nimport MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n*/\n//import 'quill/dist/quill.snow.css'; // for snow theme\nimport { quillEditor } from 'vue3-quill';\nimport savebuttoncontainer from '../components/savebuttoncontainer';\nimport { ref, computed, watch } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nexport default {\n  name: 'Drafts',\n  components: {\n    savebuttoncontainer: savebuttoncontainer,\n    quillEditor: quillEditor\n  },\n  /*\n  export default {\n  name: 'Drafts',\n  components: {\n      savebuttoncontainer\n  },\n  */\n  props: {\n    project_id: {\n      type: String,\n      required: true\n    }\n  },\n  setup: function setup(props) {\n    var draftName = ref('');\n    var markdown = ref('');\n    //const md = new MarkdownIt();\n    var project_id = ref(props.project_id);\n    var quill = ref(null);\n    watch(props, function (newProps) {\n      project_id.value = newProps.project_id;\n    });\n    var updateMarkdown = function updateMarkdown(_ref) {\n      var quill = _ref.quill;\n      markdown.value = quill.root.innerHTML;\n    };\n    var save = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var content, doc, pdf, formData, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              content = '';\n              if (quill.value) {\n                content = quill.value.root.innerHTML;\n              }\n              console.log('Quill editor content:', content);\n              doc = new jsPDF();\n              _context.next = 6;\n              return doc.html(content, {\n                // Wait for the HTML to be rendered\n                x: 10,\n                y: 10\n              });\n            case 6:\n              pdf = doc.output('blob');\n              console.log('Draft name:', draftName.value);\n              _context.prev = 8;\n              formData = new FormData();\n              formData.append('action', 'create_draft');\n              formData.append('file', pdf, \"\".concat(draftName.value, \".pdf\"));\n              formData.append('file_data', JSON.stringify({\n                content: content,\n                filename: \"\".concat(draftName.value, \".pdf\")\n              }));\n              _context.next = 15;\n              return axios.post(\"\".concat(process.env.VUE_APP_FLASK_APP_URL, \"/project_workspace/\").concat(props.project_id), formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n            case 15:\n              response = _context.sent;\n              if (response.status === 200) {\n                console.log('Draft saved successfully');\n              } else {\n                console.log('Failed to save draft');\n              }\n              _context.next = 22;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](8);\n              console.error(_context.t0);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[8, 19]]);\n      }));\n      return function save() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return {\n      draftName: draftName,\n      quill: quill,\n      project_id: project_id,\n      save: save,\n      updateMarkdown: updateMarkdown\n    };\n  }\n};","map":{"version":3,"names":["quillEditor","savebuttoncontainer","ref","computed","watch","jsPDF","axios","name","components","props","project_id","type","String","required","setup","draftName","markdown","quill","newProps","value","updateMarkdown","_ref","root","innerHTML","save","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","content","doc","pdf","formData","response","wrap","_callee$","_context","prev","next","console","log","html","x","y","output","FormData","append","concat","JSON","stringify","filename","post","process","env","VUE_APP_FLASK_APP_URL","headers","sent","status","t0","error","stop","apply","arguments"],"sources":["/home/user/School/CSC330/ThinkLink/client/src/components/drafts.vue"],"sourcesContent":["/<!--\n<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <div v-html=\"compiledMarkdown\" class=\"markdown-preview\"></div>\n    <textarea id=\"markdown-editor\" v-model=\"markdown\"></textarea>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n-->\n<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <!--<div v-html=\"compiledMarkdown \" class=\"markdown-preview\"></div>-->\n    <quill-editor id=\"quill-editor\" v-model=\"quill\" @contentChange=\"updateMarkdown\"></quill-editor>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n\n<script>\n/*\nimport savebuttoncontainer from '. ./components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\nimport MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n*/\n//import 'quill/dist/quill.snow.css'; // for snow theme\nimport { quillEditor } from 'vue3-quill';\nimport savebuttoncontainer from '../components/savebuttoncontainer';\nimport { ref, computed, watch } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n\nexport default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer,\n        quillEditor\n    },\n    /*\n    export default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer\n    },\n    */\n    props: {\n        project_id: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n\n        const draftName = ref('');\n        const markdown = ref('');\n        //const md = new MarkdownIt();\n        const project_id = ref(props.project_id);\n        const quill = ref(null);\n\n        watch(props, (newProps) => {\n            project_id.value = newProps.project_id;\n        });\n        const updateMarkdown = ({ quill }) => {\n            markdown.value = quill.root.innerHTML;\n        };\n\n        const save = async () => {\n            let content = '';\n            if (quill.value) {\n                content = quill.value.root.innerHTML\n            } \n            console.log('Quill editor content:', content);\n            const doc = new jsPDF();\n            await doc.html(content, { // Wait for the HTML to be rendered\n                x: 10,\n                y: 10\n            });\n\n            const pdf = doc.output('blob');\n            console.log('Draft name:', draftName.value);\n\n\n            try {\n                const formData = new FormData();\n                formData.append('action', 'create_draft');\n                formData.append('file', pdf, `${draftName.value}.pdf`);\n                formData.append('file_data', JSON.stringify({\n                    content: content,\n                    filename: `${draftName.value}.pdf`\n                }));\n\n                const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n\n                if (response.status === 200) {\n                    console.log('Draft saved successfully');\n                } else {\n                    console.log('Failed to save draft');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        return {\n            draftName,\n            quill,\n            project_id,\n            save,\n            updateMarkdown\n        };\n    },\n};\n</script>\n\n<style scoped>\n.projectworkspace-pagemain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  flex-grow: 1;\n}\n\n#quill-editor {\n  display: flex;\n  width: 500px;\n  height: 450px;\n  border: 1px solid black;\n}\n\n.draft-name-input {\n  height: 55px;\n  padding: 10px;\n  font-size: 30px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  border-radius: 4px;\n  align-items: center;\n  justify-content: center;\n}\n/*\n.markdown-preview {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  overflow-y: auto;\n  height: 200px;\n  width: 500px;\n  border: 1px solid black;\n}\n*/\n.save-button {\n  align-self: center;\n}\n</style>\n<!--\n/*\nconst compiledMarkdown = computed(() => {\n    return md.render(markdown.value);\n});\n\nconst save = async () => {\n    const doc = new jsPDF();\n    doc.text(markdown.value, 10, 10);\n    const pdf = doc.output('blob');\n\n    try {\n        const formData = new FormData();\n        formData.append('action', 'create_draft');\n        formData.append('file', pdf, `${draftName.value}.pdf`);\n        formData.append('file_data', JSON.stringify({\n            content: markdown.value,\n            filename: `${draftName.value}.pdf`\n        }));\n        console.log('formData:', formData);\n\n        const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n\n        if (response.status === 200) {\n            console.log('Draft saved successfully');\n        } else {\n            console.log('Failed to save draft');\n        }\n    } catch (error) {\n        console.error('An error occurred while saving the draft:', error);\n    }\n};\n-->"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}