{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-24d2bc02\"), n = n(), _popScopeId(), n;\n};\nvar _hoisted_1 = [\"innerHTML\"];\nvar _hoisted_2 = {\n  id: \"toolbar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_savebuttoncontainer = _resolveComponent(\"savebuttoncontainer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"draft-name-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.draftName = $event;\n    }),\n    placeholder: \"Enter draft name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.draftName]]), _createElementVNode(\"div\", {\n    innerHTML: $setup.compiledMarkdown,\n    class: \"markdown-preview\"\n  }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.insertText('**', '**');\n    })\n  }, \"Bold\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return _ctx.insertText('*', '*');\n    })\n  }, \"Italic\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return _ctx.insertText('# ', '');\n    })\n  }, \"Heading\")]), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"markdown-editor\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $setup.markdown = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.markdown]]), _createVNode(_component_savebuttoncontainer, {\n    class: \"save-button\",\n    onClick: $setup.save\n  }, null, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createElementBlock","_Fragment","_createElementVNode","class","_cache","$event","$setup","draftName","placeholder","innerHTML","compiledMarkdown","_hoisted_1","_hoisted_2","onClick","_ctx","insertText","markdown","_createVNode","_component_savebuttoncontainer","save"],"sources":["/home/user/School/CSC330/ThinkLink/client/src/components/drafts.vue"],"sourcesContent":["<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <div v-html=\"compiledMarkdown\" class=\"markdown-preview\"></div>\n    <div id=\"toolbar\">\n      <button @click=\"insertText('**', '**')\">Bold</button>\n      <button @click=\"insertText('*', '*')\">Italic</button>\n      <button @click=\"insertText('# ', '')\">Heading</button>\n    </div>\n    <textarea id=\"markdown-editor\" v-model=\"markdown\"></textarea>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n  \n<script>\nimport savebuttoncontainer from '../components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\nimport MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n\nexport default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer\n    },\n    props: {\n        project_id: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const draftName = ref('');\n        const markdown = ref('');\n        const md = new MarkdownIt();\n        const project_id = ref(props.project_id);\n\n        watch(props, (newProps) => {\n            project_id.value = newProps.project_id;\n        });\n\n        const compiledMarkdown = computed(() => {\n            return md.render(markdown.value);\n        });\n        \n        const save = async () => {\n            const doc = new jsPDF();\n            const options = {\n                x: 10,\n                y: 10,\n                callback: function () {\n                    // This will be called when the conversion is done\n                }\n            };\n            doc.html(markdown.value, options);\n            const pdf = doc.output('blob');\n\n            try {\n                const formData = new FormData();\n                formData.append('action', 'create_draft');\n                formData.append('file', pdf, `${draftName.value}.pdf`);\n                formData.append('file_data', JSON.stringify({\n                    content: markdown.value,\n                    filename: `${draftName.value}.pdf`\n                }));\n                console.log('formData:', formData);\n\n                const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n\n                if (response.status === 200) {\n                    console.log('Draft saved successfully');\n                } else {\n                    console.log('Failed to save draft');\n                }\n            } catch (error) {\n                console.error('An error occurred while saving the draft:', error);\n            }\n        };\n        \n        return {\n            draftName,\n            markdown,\n            compiledMarkdown,\n            save,\n    \n        };\n    },\n};\n</script>\n\n<style scoped>\n.projectworkspace-pagemain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  flex-grow: 1;\n}\n\n#markdown-editor {\n  display: flex;\n  width: 500px;\n  height: 450px;\n  border: 1px solid black;\n}\n\n.draft-name-input {\n  height: 55px;\n  padding: 10px;\n  font-size: 30px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  border-radius: 4px;\n  align-items: center;\n  justify-content: center;\n}\n\n.markdown-preview {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  overflow-y: auto;\n  height: 200px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.save-button {\n  align-self: center;\n}\n</style>"],"mappings":";;;;iBAAA;;EAGSA,EAAE,EAAC;AAAS;;;uBAHrBC,mBAAA,CAAAC,SAAA,S,gBACIC,mBAAA,CAAqF;IAA9EC,KAAK,EAAC,kBAAkB;IADnC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAC6CC,MAAA,CAAAC,SAAS,GAAAF,MAAA;IAAA;IAAEG,WAAW,EAAC;iDAAvBF,MAAA,CAAAC,SAAS,E,GAClDL,mBAAA,CAA8D;IAAzDO,SAAyB,EAAjBH,MAAA,CAAAI,gBAAgB;IAAEP,KAAK,EAAC;0BAFzCQ,UAAA,GAGIT,mBAAA,CAIM,OAJNU,UAIM,GAHJV,mBAAA,CAAqD;IAA5CW,OAAK,EAAAT,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAES,IAAA,CAAAC,UAAU;IAAA;KAAc,MAAI,GAC5Cb,mBAAA,CAAqD;IAA5CW,OAAK,EAAAT,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAES,IAAA,CAAAC,UAAU;IAAA;KAAY,QAAM,GAC5Cb,mBAAA,CAAsD;IAA7CW,OAAK,EAAAT,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAAES,IAAA,CAAAC,UAAU;IAAA;KAAY,SAAO,E,mBAE/Cb,mBAAA,CAA6D;IAAnDH,EAAE,EAAC,iBAAiB;IARlC,uBAAAK,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAQ4CC,MAAA,CAAAU,QAAQ,GAAAX,MAAA;IAAA;iDAARC,MAAA,CAAAU,QAAQ,E,GAChDC,YAAA,CAA6EC,8BAAA;IAAxDf,KAAK,EAAC,aAAa;IAAEU,OAAK,EAAEP,MAAA,CAAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}