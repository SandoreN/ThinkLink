{"ast":null,"code":"import _defineProperty from \"/home/user/School/CSC330/ThinkLink/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/home/user/School/CSC330/ThinkLink/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/user/School/CSC330/ThinkLink/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n/*\nimport savebuttoncontainer from '../components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\nimport MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n*/\n//import 'quill/dist/quill.snow.css'; // for snow theme\nimport { quillEditor } from 'vue3-quill';\nimport savebuttoncontainer from '../components/savebuttoncontainer';\nimport { ref, computed, watch } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nexport default _defineProperty(_defineProperty({\n  name: 'Drafts',\n  components: {\n    savebuttoncontainer: savebuttoncontainer,\n    quillEditor: quillEditor\n  },\n  props: {\n    project_id: {\n      type: String,\n      required: true\n    }\n  }\n}, \"props\", {\n  project_id: {\n    type: String,\n    required: true\n  }\n}), \"setup\", function setup(props) {\n  var draftName = ref('');\n  var markdown = ref('');\n  //const md = new MarkdownIt();\n  var project_id = ref(props.project_id);\n  watch(props, function (newProps) {\n    project_id.value = newProps.project_id;\n  });\n  var updateMarkdown = function updateMarkdown(_ref) {\n    var quill = _ref.quill;\n    markdown.value = quill.root.innerHTML;\n  };\n  /*\n  const compiledMarkdown = computed(() => {\n      return md.render(markdown.value);\n  });\n  \n  const save = async () => {\n      const doc = new jsPDF();\n      doc.text(markdown.value, 10, 10);\n      const pdf = doc.output('blob');\n       try {\n          const formData = new FormData();\n          formData.append('action', 'create_draft');\n          formData.append('file', pdf, `${draftName.value}.pdf`);\n          formData.append('file_data', JSON.stringify({\n              content: markdown.value,\n              filename: `${draftName.value}.pdf`\n          }));\n          console.log('formData:', formData);\n           const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n              headers: {\n                  'Content-Type': 'multipart/form-data'\n              }\n          });\n           if (response.status === 200) {\n              console.log('Draft saved successfully');\n          } else {\n              console.log('Failed to save draft');\n          }\n      } catch (error) {\n          console.error('An error occurred while saving the draft:', error);\n      }\n  };\n  */\n  var save = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var doc, pdf, formData, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            doc = new jsPDF();\n            _context.next = 3;\n            return doc.html(markdown.value, {\n              // Wait for the HTML to be rendered\n              x: 10,\n              y: 10\n            });\n          case 3:\n            pdf = doc.output('blob');\n            _context.prev = 4;\n            formData = new FormData();\n            formData.append('action', 'create_draft');\n            formData.append('file', pdf, \"\".concat(draftName.value, \".pdf\"));\n            formData.append('file_data', JSON.stringify({\n              content: markdown.value,\n              filename: \"\".concat(draftName.value, \".pdf\")\n            }));\n            _context.next = 11;\n            return axios.post(\"\".concat(process.env.VUE_APP_FLASK_APP_URL, \"/project_workspace/\").concat(props.project_id), formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            });\n          case 11:\n            response = _context.sent;\n            if (response.status === 200) {\n              console.log('Draft saved successfully');\n            } else {\n              console.log('Failed to save draft');\n            }\n            _context.next = 18;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](4);\n            console.error(_context.t0);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[4, 15]]);\n    }));\n    return function save() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return {\n    draftName: draftName,\n    markdown: markdown,\n    project_id: project_id,\n    save: save,\n    updateMarkdown: updateMarkdown\n  };\n});","map":{"version":3,"names":["quillEditor","savebuttoncontainer","ref","computed","watch","jsPDF","axios","_defineProperty","name","components","props","project_id","type","String","required","setup","draftName","markdown","newProps","value","updateMarkdown","_ref","quill","root","innerHTML","save","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","doc","pdf","formData","response","wrap","_callee$","_context","prev","next","html","x","y","output","FormData","append","concat","JSON","stringify","content","filename","post","process","env","VUE_APP_FLASK_APP_URL","headers","sent","status","console","log","t0","error","stop","apply","arguments"],"sources":["/home/user/School/CSC330/ThinkLink/client/src/components/drafts.vue"],"sourcesContent":["/<!--\n<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <div v-html=\"compiledMarkdown\" class=\"markdown-preview\"></div>\n    <textarea id=\"markdown-editor\" v-model=\"markdown\"></textarea>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n-->\n<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <!--<div v-html=\"compiledMarkdown\" class=\"markdown-preview\"></div>-->\n    <quill-editor id=\"markdown-editor\" v-model=\"markdown\" @contentChange=\"updateMarkdown\"></quill-editor>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n\n<script>\n/*\nimport savebuttoncontainer from '../components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\nimport MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n*/\n//import 'quill/dist/quill.snow.css'; // for snow theme\nimport { quillEditor } from 'vue3-quill';\nimport savebuttoncontainer from '../components/savebuttoncontainer';\nimport { ref, computed, watch } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\n\nexport default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer,\n        quillEditor\n    },\n    props: {\n        project_id: {\n            type: String,\n            required: true,\n        },\n    },\n\n    /*\n    export default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer\n    },\n    */\n    props: {\n        project_id: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n\n        const draftName = ref('');\n        const markdown = ref('');\n        //const md = new MarkdownIt();\n        const project_id = ref(props.project_id);\n\n        watch(props, (newProps) => {\n            project_id.value = newProps.project_id;\n        });\n        const updateMarkdown = ({ quill }) => {\n            markdown.value = quill.root.innerHTML;\n        };\n        /*\n        const compiledMarkdown = computed(() => {\n            return md.render(markdown.value);\n        });\n        \n        const save = async () => {\n            const doc = new jsPDF();\n            doc.text(markdown.value, 10, 10);\n            const pdf = doc.output('blob');\n\n            try {\n                const formData = new FormData();\n                formData.append('action', 'create_draft');\n                formData.append('file', pdf, `${draftName.value}.pdf`);\n                formData.append('file_data', JSON.stringify({\n                    content: markdown.value,\n                    filename: `${draftName.value}.pdf`\n                }));\n                console.log('formData:', formData);\n\n                const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n\n                if (response.status === 200) {\n                    console.log('Draft saved successfully');\n                } else {\n                    console.log('Failed to save draft');\n                }\n            } catch (error) {\n                console.error('An error occurred while saving the draft:', error);\n            }\n        };\n        */\n        const save = async () => {\n            const doc = new jsPDF();\n            await doc.html(markdown.value, { // Wait for the HTML to be rendered\n                x: 10,\n                y: 10\n            });\n\n            const pdf = doc.output('blob');\n\n            try {\n                const formData = new FormData();\n                formData.append('action', 'create_draft');\n                formData.append('file', pdf, `${draftName.value}.pdf`);\n                formData.append('file_data', JSON.stringify({\n                    content: markdown.value,\n                    filename: `${draftName.value}.pdf`\n                }));\n\n                const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n\n                if (response.status === 200) {\n                    console.log('Draft saved successfully');\n                } else {\n                    console.log('Failed to save draft');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n\n        };\n        return {\n            draftName,\n            markdown,\n            project_id,\n            save,\n            updateMarkdown\n        };\n    },\n};\n</script>\n\n<style scoped>\n.projectworkspace-pagemain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  flex-grow: 1;\n}\n\n#markdown-editor {\n  display: flex;\n  width: 500px;\n  height: 450px;\n  border: 1px solid black;\n}\n\n.draft-name-input {\n  height: 55px;\n  padding: 10px;\n  font-size: 30px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  border-radius: 4px;\n  align-items: center;\n  justify-content: center;\n}\n\n.markdown-preview {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  overflow-y: auto;\n  height: 200px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.save-button {\n  align-self: center;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}