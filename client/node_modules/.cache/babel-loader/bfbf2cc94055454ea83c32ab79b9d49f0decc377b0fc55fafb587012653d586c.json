{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_editor = _resolveComponent(\"editor\");\n  var _component_savebuttoncontainer = _resolveComponent(\"savebuttoncontainer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"draft-name-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.draftName = $event;\n    }),\n    placeholder: \"Enter draft name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.draftName]]), _createCommentVNode(\" <div v-html=\\\"compiledMarkdown\\\" class=\\\"markdown-preview\\\"></div> \"), _createCommentVNode(\" <textarea id=\\\"markdown-editor\\\" v-model=\\\"markdown\\\"></textarea> \"), _createVNode(_component_editor, {\n    init: {\n      height: 500,\n      menubar: false,\n      plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n      toolbar: 'undo redo | formatselect | bold italic backcolor | \\\n                alignleft aligncenter alignright alignjustify | \\\n                bullist numlist outdent indent | removeformat | help'\n    },\n    modelValue: $setup.content,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.content = $event;\n    }),\n    style: {\n      \"min-height\": \"500px\",\n      \"min-width\": \"500px\",\n      \"border\": \"1px solid #ccc\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_savebuttoncontainer, {\n    class: \"save-button\",\n    onClick: $setup.save\n  }, null, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","class","_cache","$event","$setup","draftName","placeholder","_createCommentVNode","_createVNode","_component_editor","init","modelValue","content","style","_component_savebuttoncontainer","onClick","save"],"sources":["/home/user/School/CSC330/ThinkLink/client/src/components/drafts.vue"],"sourcesContent":["<template>\n    <input class=\"draft-name-input\" v-model=\"draftName\" placeholder=\"Enter draft name\" />\n    <!-- <div v-html=\"compiledMarkdown\" class=\"markdown-preview\"></div> -->\n    <!-- <textarea id=\"markdown-editor\" v-model=\"markdown\"></textarea> -->\n    <editor\n        :init=\"{\n            height: 500,\n            menubar: false,\n            plugins: [\n                'advlist autolink lists link image charmap print preview anchor',\n                'searchreplace visualblocks code fullscreen',\n                'insertdatetime media table paste code help wordcount'\n            ],\n            toolbar:\n                'undo redo | formatselect | bold italic backcolor | \\\n                alignleft aligncenter alignright alignjustify | \\\n                bullist numlist outdent indent | removeformat | help'\n        }\"\n        v-model=\"content\" \n        style=\"min-height: 500px; min-width: 500px; border: 1px solid #ccc;\"\n  ></editor>\n    <savebuttoncontainer class=\"save-button\" @click=\"save\"></savebuttoncontainer>\n</template>\n  \n<script>\nimport savebuttoncontainer from '../components/savebuttoncontainer'\nimport { ref, computed, watch } from 'vue';\n//import MarkdownIt from 'markdown-it';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-vue';\n\nexport default {\n    name: 'Drafts',\n    components: {\n        savebuttoncontainer,\n        Editor\n    },\n    props: {\n        project_id: {\n            type: String,\n            required: true,\n        },\n    },\n    setup(props) {\n        const draftName = ref('');\n        const content = ref(''); // for tinymce\n        /*const markdown = ref('');*/\n        /*const md = new MarkdownIt();*/\n        const project_id = ref(props.project_id);\n\n        watch(props, (newProps) => {\n            project_id.value = newProps.project_id;\n        });\n\n        /*const compiledMarkdown = computed(() => {\n            return md.render(markdown.value);\n        });*/\n        \n        const save = async () => {\n            const doc = new jsPDF();\n            doc.fromHTML(content.value, 10, 10); //for tinymce\n            /*doc.text(markdown.value, 10, 10);*/\n            const pdf = doc.output('blob');\n\n            try {\n                const formData = new FormData();\n                formData.append('action', 'create_draft');\n                formData.append('file', pdf, `${draftName.value}.pdf`);\n                formData.append('file_data', JSON.stringify({\n                    /*content: markdown.value,*/\n                    content: content.value, //for tinymce\n                    filename: `${draftName.value}.pdf`\n                }));\n                console.log('formData:', formData);\n\n                const response = await axios.post(`${process.env.VUE_APP_FLASK_APP_URL}/project_workspace/${props.project_id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                });\n\n                if (response.status === 200) {\n                    console.log('Draft saved successfully');\n                } else {\n                    console.log('Failed to save draft');\n                }\n            } catch (error) {\n                console.error('An error occurred while saving the draft:', error);\n            }\n        };\n        \n        return {\n            draftName,\n            content, // for tinymce\n            /*markdown,\n            compiledMarkdown,*/\n            save,\n    \n        };\n    },\n};\n</script>\n\n<style scoped>\n.projectworkspace-pagemain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n  padding-top: 30px;\n  max-width: 100%;\n  height: 100%;\n  position: relative;\n  flex-grow: 1;\n}\n\n#markdown-editor {\n  display: flex;\n  width: 500px;\n  height: 450px;\n  border: 1px solid black;\n}\n\n.draft-name-input {\n  height: 55px;\n  padding: 10px;\n  font-size: 30px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  border-radius: 4px;\n  align-items: center;\n  justify-content: center;\n}\n\n.markdown-preview {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  overflow-y: auto;\n  height: 200px;\n  width: 500px;\n  border: 1px solid black;\n}\n\n.save-button {\n  align-self: center;\n}\n</style>"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,S,gBACIC,mBAAA,CAAqF;IAA9EC,KAAK,EAAC,kBAAkB;IADnC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAC6CC,MAAA,CAAAC,SAAS,GAAAF,MAAA;IAAA;IAAEG,WAAW,EAAC;iDAAvBF,MAAA,CAAAC,SAAS,E,GAClDE,mBAAA,wEAAuE,EACvEA,mBAAA,uEAAsE,EACtEC,YAAA,CAgBQC,iBAAA;IAfHC,IAAI,EAAE;;;;;;;KAYN;IAjBTC,UAAA,EAkBiBP,MAAA,CAAAQ,OAAO;IAlBxB,uBAAAV,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAkBiBC,MAAA,CAAAQ,OAAO,GAAAT,MAAA;IAAA;IAChBU,KAAoE,EAApE;MAAA;MAAA;MAAA;IAAA;2CAEJL,YAAA,CAA6EM,8BAAA;IAAxDb,KAAK,EAAC,aAAa;IAAEc,OAAK,EAAEX,MAAA,CAAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}